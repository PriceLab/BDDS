source("../renderGeneModel.R")
class(mtx)
class(mtx.skin)
source("../renderGeneModel.R")
target.gene
promoter.shoulder
dim(mtx.expression)
class(mtx.expression)
class(mtx.classificaion)
absolute.lasso.beta.min
n
dim(tbl.fp)
head(tbl.fp)
n
length(candidate.tfs)
head(tbl.fp)
wdth(400)
head(tbl.fp)
slotNames(fpf)
fpf@genome.db
dbListTables(fpf@genome.db)
dbGetQuery(fpf@genome.db, "select * from motifsgenes limit 3")
dbGetQuery(fpf@genome.db, "select * from motifsgenes where motif = 'MA0635.1'")
Q
setMethod("getFootprintsInRegion", "FootprintFinder",

    function(obj, chromosome, start, end){
       query.p0 <- "select loc, chrom, start, endpos from regions"
       query.p1 <- sprintf("where chrom='%s' and start >= %d and endpos <= %d", chromosome, start, end)
       query.regions <- paste(query.p0, query.p1)
       tbl.regions <- dbGetQuery(obj@project.db, query.regions)
       if(nrow(tbl.regions) == 0)
          return(data.frame())
       loc.set <- sprintf("('%s')", paste(tbl.regions$loc, collapse="','"))
       query.hits <- sprintf("select * from hits where loc in %s", loc.set)
       tbl.hits <- dbGetQuery(obj@project.db, query.hits)
       tbl.out <- merge(tbl.regions, tbl.hits, on="loc")
       motifs <- sort(unique(tbl.out$name))
       browser()
       #tbl.tfMotifs <- dbGetQuery(obj@genome.db, "select * from motifsgenes where motif
     
       unique(tbl.out)

       #query <- paste(c("select fp.chr, fp.mfpstart, fp.mfpend, fp.motifname, fp.pval, mg.motif, mg.tf_name, mg.tf_ensg",
       #                 "from footprints fp",
       #                 "inner join motifsgenes mg",
       #                 "on fp.motifName=mg.motif",
       #                   sprintf("where fp.chr = '%s' and  fp.mfpstart >= %d and fp.mfpend <= %d",
       #                           chromosome, start, end)),
       #                 collapse=" ")
       #if(!obj@quiet) print(query)
       #dbGetQuery(obj@project.db, query)
       })
source("../renderGeneModel.R")
q()
