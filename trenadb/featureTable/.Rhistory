source("extract.R")
source("extract.R")
source("extract.R")
x
head(tbl.combined)
dim(tbl.combined)
dim(tbl.apoe)
tbl.apoe
?merge
merge(tbl.apoe, tbl.combined.chipseq.with.motif, by=c("loc", "name"))
tbl.x <- merge(tbl.apoe, tbl.combined.chipseq.with.motif, by=c("loc", "name"))
tbl.x[, c(1,2,3,4,5, "score1", "motifname")]
tbl.x[, c("loc", "name", "score1", "motifname")]
unique(tbl.x[, c("loc", "name", "score1", "motifname")])
tbl.combined.chipseq.with.motif
dim(tbl.combined)
head(tbl.combined)
head(tbl.overlaps)
tbl.apoe
dim(tbl.overlaps)
tbl.overlaps
tbl.combined
dim(tbl.combined)
dim(tbl.fimo)
dim(unique(tbl.combined))
dim(tbl.fimo); dim(unique(tbl.fimo))
dim(tbl.combined)
dim(unique(tbl.combined))
wdth(8000)
duplicated(tbl.combined)
which(duplicated(tbl.combined))
dups <- which(duplicated(tbl.combined))
tbl.combined[4,]
tbl.combined[1,]
subset(tbl.cobmined, loc=="chr19:44904803-44904953" and name=="CTCF" and motifname=="MA0079.3")
subset(tbl.cobmined, loc=="chr19:44904803-44904953" & name=="CTCF" & motifname=="MA0079.3")
subset(tbl.combined, loc=="chr19:44904803-44904953" & name=="CTCF" & motifname=="MA0079.3")
tbl.x
dim(tbl.apoe)
tbl.apoe
tbl.combined.chipseq.with.motif
tbl.apoe
tbl.x
tbl.apoe
tbl.combined
tbl.x
tbl.apoe
tbl.x
tbl.x
tbl.apoe
tbl.apoe
tbl.apoe
dim(tbl.combined)
tbl.apoe
setdiff(tbl.apoe$name, tbl.combined.chipseq.with.motif$name)
runTEsts()
runTests()
runTests()
shoulder
tbl.cs
tbl.combined.chipseq.with.motif
Q
source("extract.R"); runTests()
dim(tbl.cs); dim(tbl.fimo)
head(tbl.fimo)
n
n
n
dim(tbl.overlaps)
n
n
dim(tbl.combined)
head(tbl.combined)
n
n
n
dim(tbl.combined)
head(tbl.combined)
Q
source("extract.R"); runTests()
n
n
n
n
n
n
n
n
n
dim(tbl.combined)
subset(tbl.combined, bindingSite==TRUE)
tbl.combined.chipseq.with.motif
tbl.cs
Q
source("extract.R"); runTests()
dim(tbl.cs)
merge(tbl.cs, tbl.combined, by="name")
merge(tbl.cs, subset(tbl.combined, bindingSite==TRUE), by="name")
tbl.cs
tbl.combined.chipseq.with.motif
subset(tbl.cs, !name %in% tbl.combined.chipseq.with.motif)[, c("loc", "name",)]
failed <- setdiff(tbl.cs$name, tbl.combined.chipseq.with.motif$name)
failed
subset(tbl.cs, name %in% failed)
subset(tbl.cs, name %in% failed)[, c("loc", "name",)]
subset(tbl.cs, name %in% failed)
subset(tbl.cs, name %in% failed)[, c("loc")]
subset(tbl.cs, name %in% failed)[, c("loc", "name")]
tbl.combined.chipseq.with.motif
tbl.status
merge(tbl.cs, tbl.status, by=c("loc", "name"))
source("../regionAndHitsSchemas.R")
tbl.out[, c(hit.schema(), "bindingSite", "motifname")]
Q
> source("extract.R"); runTests()
source("extract.R"); runTests()
source("extract.R"); runTests()
source("extract.R"); runTests()
source("extract.R"); runTests()
colnames(tbl.anno)
hit.schema()
setdiff(names(tbl.anno),hit.schema())
Q
source("extract.R"); runTests()
source("extract.R"); runTests()
tbl.anno
Q
source("extract.R"); runTests()
n
source("extract.R"); runTests()
dim(tbl.anno)
tbl.anno
Q
source("extract.R"); runTests()
tbl.anno
dim(tbl.apoe)
Q
Q
dim(tbl.apoe); dim(tbl.anno)
head(tbl.anno)
table(tbl.anno$motifName)
table(tbl.anno$motifname)
wdth(300)
table(tbl.anno$motifname)
as.data.frame(table(tbl.anno$motifname))
dim(tbl.anno)
tbl.anno
tbl.anno
Q
tbl.hits <- tbl.anno
dim(tbl.hits)
tbl.hits$motifname
c("locTF", tbl.hits$motifname)
c("locTF", sort(unique(tbl.hits$motifname)))
tbl
args(matrix)
data.frame(matrix(1:28, ncol=7, nrow=8))
tbl
dim(tbl.hits)
length(column.names)
sort(unique(tbl.hits$moitfname))
tbl
tbl
head(tbl.hits)
tbl
head(tbl.hits)
tbl
tbl
tbl
tbl
source("extract.R"); runTests()
source("extract.R"); runTests()
source("extract.R"); runTests()
dim(tbl)
tbl
tbl.hits
Q
source("extract.R"); runTests()
source("extract.R"); runTests()
dim(tbl.combined)
head(tbl.combined)
dim(tbl.overlaps)
head(tbl.overlaps, n=40)
Q
dim(tbl.overlaps)
tbl.cs
tbl.fimo
head(tbl.fimo)
head(tbl.overlaps)
tbl.cs[1,]
tbl.fimo[1,]
cbind(tbl.fimo[1, ], tbl.cs[1, c("type", "name", "score1"])
cbind(tbl.fimo[1, ], tbl.cs[1, c("type", "name", "score1")]))
cbind(tbl.fimo[1, ], tbl.cs[1, c("type", "name", "score1")])
cbind(tbl.fimo[1, ], tbl.cs[1, c("loc", "type", "name", "score1")])
cbind(tbl.fimo[1, ], tbl.cs[1, c("type", "name", "score1")])
dim(tbl.combined)
tbl.combined
head(tbl.combined)
head(tbl.combined)
tbl.cs$name
tbl.combined.chipseq.with.motif$motifname
failed.tfs
head(tbl.combined)
tbl.combined.chipseq.with.motif
tbl.out$loc <- with(tbl.out, paste(chrom, ":", start, "-", endpos, sep=""))
tbl.out
Q
source("extract.R");
dim(tbl.expanded)
tbl.expanded
source("extract.R");
n
n
n
n
n
n
n
tbl.genemotifs <- dbGetQuery(db.trena, "select * from tfmotifs")
dim(tbl.genemotifs)
head(tbl.genemotifs)
source("extract.R");
source("extract.R");
c
source("extract.R");
test.addFimoRegions()
c
c
dim(tbl.expanded)
tbl.expanded
c
dim(tbl.expanded)
head(tbl.expanded)
source("extract.R"); test.addFimoRegions()
dim(tbl.expanded)
head(tbl.expanded)
grep("PP" tbl.expanded$name)
grep("PP", tbl.expanded$name)
grep("LX", tbl.expanded$name)
head(tbl.genesmotifs)
grep("PP", tbl.genesmotifs$gene)
grep("PP", tbl.genesmotifs$gene, v=T)
dim(tbl.expanded)
(tbl.expanded)
dim(tbl.expanded
)
tbl.expanded
motifNames
tbl.hits$loc
tbl.hits
Q
tbl.cs <- tbl.apoe
dim(tbl.cs)
tbl.out
tbl.out
colnames(tbl.out)
setdiff(expected.colnames, colnames(tbl.expanded))
source("extract.R"); test.addFimoRegions()
n
n
n
tbl.hits
Q
source("extract.R"); test.addFimoRegions()
source("extract.R"); runTests()
tbl.hits
n
Q
source("extract.R"); runTests()
n
n
column.names
n
n
n
n
n
tbl
tbl.hits
tbl[1, sprintf("chipseq_", tbl$motifname[1])]
tbl[1, sprintf("chipseq_%s", tbl$motifname[1])]
sprintf("chipseq_%s", tbl$motifname[1])
sprintf("chipseq_%s", tbl.hits$motifname[1])
tbl[1, sprintf("chipseq_%s", tbl.hits$motifname[1])]
with(tbl.hits[1,], tbl[1, sprintf("chipseq_%s", motifname)] <- score1)
tbl
with(tbl.hits[1,], tbl[1, sprintf("chipseq_%s", motifname)])
with(tbl.hits[1,], tbl[1, sprintf("chipseq_%s", motifname)] <- 1
)
with(tbl.hits[1,], tbl[1, sprintf("chipseq_%s", motifname)])
tbl.hits
Q
tbl.expanded
dups(tbl.expanded$loc)
duplicated(tbl.expanded$loc)
source("extract.R"); runTests()
tbl.hits
Q
source("extract.R"); runTests()
tbl.hits
duplicated(tbl.hits$locTF)
Q
source("extract.R"); runTests()
tbl.hits
which(duplicated(tbl.hits$locTF))
tbl.hits[19,]
subset(tbl.hits, locTF=="chr19:44911367-44911376_USF1")
save(tbl.hits, file="tbl.hits-for-toFeatureTableTest.RData")
print(load("tbl.hits-for-toFeatureTableTest.Rdata"))
k
dir()
source("extract.R");
print(load("tbl.hits-for-toFeatureTableTest.Rdata"))
print(load("tbl.hits-for-toFeatureTableTest.RData"))
source("extract.R");runTests()
dim(tbl)
tbl
wdth(240)
tbl
wdth(800)
tbl
head(tbl.hits)
r <- 1; row <- tbl.hits[r, "locTF"]
col <- sprintf("chipseq_%s", tbl.hits[r, "motifname"])
tbl[row, col]
row
tbl[grep(row, tbl$locTF), col]
tbl[grep(row, tbl$locTF), col] <- 1
tbl[grep(row, tbl$locTF), col]
tbl
tbl
nrow(tbl.hits)
c
tbl
tbl.hits[19,]
subset(tbl, locTF=="chr19:44911367-44911376_USF1")
Q
source("extract.R")
c
tbl
sum(tbl[, -1])
dim(tbl.hits)
all(tbl$locTF %in% tbl.hits$locTF)
all(sort(tbl$locTF) == sort(tbl.hits$locTF))
sort(tbl$locTF) == sort(tbl.hits$locTF)
all(sort(unique(tbl$locTF)) == sort(unique(tbl.hits$locTF)))
all(sort(tbl$locTF) == sort(unique(tbl.hits$locTF)))
source("extract.R"); runTests()
dim(tbl)
tbl
sum(tbl[, -1])
sum(tbl[, -1])
dim(tbl)
source("extract.R"); runTests()
dim(tbl.expanded)
dim(tbl.apoe)
dim(tbl.apoe)
runTests
runTests
source("extract.R"); runTests()
print(load("tbl.hits-for-toFeatureTableTest.RData"))
dim(tbl.hits)
dim(tbl.expanded)
dim(tbl.anno)
q()
source("extract.R"); runTests()
dim(tbl)
tbl[1:10, 1:10]
sum(tbl[, -1])
dim(tbl.expanded)
dim(tbl.anno)
head(tbl.anno)
tbl.expanded[1,]
tbl.expanded[order(tbl.expanded$loc),][1,]
tbl.anno[order(tbl.anno$loc),][1,]
dbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
tbl.apoe
dim(tbl.fimo)
head(tbl.fimo)
wdth(120)
head(tbl.fimo)
length(unique(tbl.fimo$motifname))
source("extract.R"); 
c
q()
source("extract.R"); 
source("extract.R"); 
runTests()
dim(tbl.failed)
n
n
n
n
n
n
dim(tbl.failed)
tbl.failed
n
n
n
n
n
n
dim(tbl.failed)
failed.tfs
dim(tbl.cs)
dim(tbl.fimo)
Q
source("extract.R"); 
runTests
test.annotateWithMotifs()
c
source("extract.R"); test.annotateWithMotifs()
c
c
source("extract.R"); runTests()
source("extract.R"); test.addFimoRegions()
n
n
n
n
n
dim(tbl.cs)
dim(tbl.combined)
head(tbl.combined)
n
n
n
n
n
dim(tbl.out)
tbl.out
wdth(120)
tbl.out
c
source("extract.R"); test.addFimoRegions()
dim(tbl.anno)
dim(tbl.apoe)
tbl.anno
dim(tbl.expanded)
tbl.expanded
dups <- which(duplicated(tbl.expanded[, c("motifname", "loc")]))
dups
dim(tbl)
tbl
nrow(tbl.expanded)
sum(tbl[, -1])
source("extract.R"); 
test.toFeatureTable(1000)
test.toFeatureTable(2000)
test.toFeatureTable(3000)
source("extract.R"); 
test.toFeatureTable(3000)
shoulder <- 2000
dim(tbl.apoe)
dim(tbl.expanded)
shoulder <- 10000
dim(tbl.apoe)
dim(tbl.fimo)
dim(tbl.expanded)
source("extract.R"); 
test.toFeatureTable(1000)
source("extract.R"); 
test.toFeatureTable(1000)
test.toFeatureTable(10000)
source("extract.R"); 
test.toFeatureTable(1000)
test.toFeatureTable(10000)
test.toFeatureTable(100000)
source("extract.R"); 
test.toFeatureTable(1000)
shoulder
n
dim(tbl.apoe
)
tbl.apoe
shoulder <- 30000
tbl.apoe <- getHits(db.chipseq, apoe$chrom, apoe$start - shoulder, apoe$start + shoulder)
dim(tbl.apoe)
Q
source("extract.R"); test.toFeatureTable(1000)
source("extract.R"); test.toFeatureTable(30000)
dim(tbl.cs)
source("extract.R"); test.toFeatureTable(2000)
source("extract.R"); test.toFeatureTable(3000)
q()
